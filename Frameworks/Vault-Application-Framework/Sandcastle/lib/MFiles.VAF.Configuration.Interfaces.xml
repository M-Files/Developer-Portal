<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MFiles.VAF.Configuration.Interfaces</name>
    </assembly>
    <members>
        <member name="T:MFiles.VAF.Configuration.Interfaces.Domain.ConfigurationDomainCommand">
            <summary>
            Defines a command that can be exposed and triggered for a domain via the json configurator.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.ConfigurationDomainCommand.ID">
            <summary>
            A unique identifier for the command.
            Can be used to reference the command in status dashboards.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.ConfigurationDomainCommand.DisplayName">
            <summary>
            The display name to use for the command. Optional.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.ConfigurationDomainCommand.HelpText">
            <summary>
            Help text to expose for the command. Optional.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.ConfigurationDomainCommand.ExtensionMethod">
            <summary>
            The extension method to call when the command is triggered.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.ConfigurationDomainCommand.Locations">
            <summary>
            A list of locations specifying where and how the command will be shown.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.ConfigurationDomainCommand.ConfirmMessage">
            <summary>
            If specified, the message will be displayed to the user in a confirmation dialog after they've
            triggered the command, but before its execution. They will have the option to proceed or
            cancel the command.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.ConfigurationDomainCommand.ChangesPendingConfirmMessage">
            <summary>
            If specified and there are pending changes in the editor, this message will be displayed to the user
            in a confirmation dialog after they've triggered the command, but before its execution.
            They will have the option to proceed 'OK' or 'Cancel' the command.
            Note: This should be used as a replacement for "confirmMessage" messages. When this message is defined
            the "comfirmMessage" prompt is not used.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Interfaces.Domain.ConfigurationDomainCommand.SetPendingConfirmMessage(System.String,System.String)">
             <summary>
             Used to set the confirm prompt shown to the user. This is intended to show the user a prompt:
            
             Prompt message text here.
             [ OK ] ...or... [ Cancel ]
             
             This will be shown to the user to verify that they wish to perform the action when there are
             changes pending in the editor. In versions of MFAdmin older than 20.10.x.x there was no support
             for the conditional if( changesArePending ) check, so the legacy confirm message will be shown in
             all cases in versions older than 20.10.x.x, so ensure to word the messages accordingly.
             </summary>
             <param name="changesPendingConfirmMessage">
             - Replaces confirmMessage when changesPendingConfirmMessage is supported by the platform and defined.
             The prompt message text to be shown to the user before command execution.
             - Only shown when changes are pending in the editor.
             </param>
             <param name="legacyConfirmMessage">
             - Not used when changesPendingConfirmMessage is supported by the platform and defined.
             The prompt message text to be shown to the user before command execution.
             - Shown always in M-Files platform versions older than 20.10.x.x.
             - Used to support platform versions older than 20.10.x.x.
             </param>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.ConfigurationDomainCommand.Blocking">
            <summary>
            Indicates whether the interface should be blocked while the command is being executed.
            Useful for longer running commands where further user interaction with the interface
            could negatively effect user experience or execution, or simply a way to indicate to the
            user that something is happening, and when it is over.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.ConfigurationDomainCommand.ExposeErrors">
            <summary>
            Indicates whether errors should be exposed to the caller in JavaScript.
            - When true, any errors are not handled by the default handler... Instead they are 
            allowed to bubble up through the promise chain. This allows them to be handled by non-default
            implementations.
            - When false, the default handler is used. This will show the message in a 
            MFClientScript.IDashboard.ShowMessage() dialog.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Interfaces.Domain.CommandContainer">
            <summary>
            Containers in which <see cref="T:MFiles.VAF.Configuration.Interfaces.Domain.IConfigurationDomainCommand"/>s can be displayed.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Interfaces.Domain.CommandContainer.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Interfaces.Domain.CommandContainer.DomainButtonBar">
            <summary>
            Domains Button Bar.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Interfaces.Domain.CommandContainer.DomainContextMenu">
            <summary>
            Domains Context Menu.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Interfaces.Domain.CommandContainer.ConfigurationContextMenu">
            <summary>
            Configurations Context Menu.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Interfaces.Domain.ICommandLocation">
            <summary>
            Defines a location where a command should be shown to users.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.ICommandLocation.Container">
            <summary>
            Indicates the container in which the command is shown.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Interfaces.Domain.IConfigurationDomainCommand">
            <summary>
            Defines a command that can be exposed and triggered for a domain via the json configurator.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.IConfigurationDomainCommand.ID">
            <summary>
            A unique identifier for the command.
            Can be used to reference the command in status dashboards.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.IConfigurationDomainCommand.DisplayName">
            <summary>
            The display name to use for the command.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.IConfigurationDomainCommand.HelpText">
            <summary>
            Help text to expose for the command.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.IConfigurationDomainCommand.ExtensionMethod">
            <summary>
            The extension method to call when the command is triggered.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.IConfigurationDomainCommand.Locations">
            <summary>
            A list of locations specifying where and how the command will be shown.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.IConfigurationDomainCommand.ConfirmMessage">
            <summary>
            If specified, the message will be displayed to the user in a confirmation dialog after they've
            triggered the command, but before its execution. They will have the option to proceed or
            cancel the command.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Interfaces.Domain.IMethodSource">
            <summary>
            Defines an interface that is used to mark extension method based data sources.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Interfaces.Domain.MethodSourceDefinition">
            <summary>
            Wrapper for method sources to expose the name of the source for json serialization.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.MethodSourceDefinition.Source">
            <summary>
            The wrapped source.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Interfaces.Domain.MethodSourceDefinition.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Interfaces.Domain.MethodSourceDefinition.#ctor(MFiles.VAF.Configuration.Interfaces.Domain.IMethodSource)">
            <summary>
            Constructor.
            </summary>
            <param name="methodSource">The method source to wrap.</param>
        </member>
        <member name="T:MFiles.VAF.Configuration.Interfaces.Domain.Source">
            <summary>
            Defines a data source.
            All implementations must have a source handler defined in javascript.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.Source.TypeName">
            <summary>
            The name of the source.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Interfaces.Domain.SourceDefinition">
            <summary>
            Wrapper for sources to expose the name of the source for json serialization.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Interfaces.Domain.SourceDefinition.source">
            <summary>
            Protected field for storing the Source property.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.SourceDefinition.SourceType">
            <summary>
            Exposes the name of the source in the wrapper.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Interfaces.Domain.SourceDefinition.Source">
            <summary>
            The wrapped source.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Interfaces.Domain.SourceDefinition.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Interfaces.Domain.SourceDefinition.#ctor(MFiles.VAF.Configuration.Interfaces.Domain.Source)">
            <summary>
            Constructor.
            </summary>
            <param name="source">The source to wrap.</param>
        </member>
    </members>
</doc>
