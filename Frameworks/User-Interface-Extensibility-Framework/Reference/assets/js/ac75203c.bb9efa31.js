"use strict";(self.webpackChunkuix_2=self.webpackChunkuix_2||[]).push([[2888],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>C});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function m(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?m(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},m=Object.keys(e);for(a=0;a<m.length;a++)t=m[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(a=0;a<m.length;a++)t=m[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),d=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},s=function(e){var n=d(e.components);return a.createElement(l.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,m=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=d(t),p=o,C=c["".concat(l,".").concat(p)]||c[p]||u[p]||m;return t?a.createElement(C,r(r({ref:n},s),{},{components:t})):a.createElement(C,r({ref:n},s))}));function C(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var m=t.length,r=new Array(m);r[0]=p;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[c]="string"==typeof e?e:o,r[1]=i;for(var d=2;d<m;d++)r[d]=t[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},18679:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(67294),o=t(86010);const m={tabItem:"tabItem_Ymn6"};function r(e){let{children:n,hidden:t,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(m.tabItem,r),hidden:t},n)}},34259:(e,n,t)=>{t(67294),t(51048)},44183:(e,n,t)=>{t.d(n,{ZP:()=>i});var a=t(87462),o=(t(67294),t(3905));const m={toc:[]},r="wrapper";function i(e){let{components:n,...t}=e;return(0,o.kt)(r,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Value"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"MFiles.MenuLocation.MenuLocation_ContextMenu_ObjectOperations")),(0,o.kt)("td",{parentName:"tr",align:null},"26"),(0,o.kt)("td",{parentName:"tr",align:null},"Menu location for the position of object operations in the context menu.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"MFiles.MenuLocation.MenuLocation_ContextMenu_Edit")),(0,o.kt)("td",{parentName:"tr",align:null},"37"),(0,o.kt)("td",{parentName:"tr",align:null},"Menu location for the context menu position for Edit commands.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"MFiles.MenuLocation.MenuLocation_ContextMenu_DocumentConversions")),(0,o.kt)("td",{parentName:"tr",align:null},"41"),(0,o.kt)("td",{parentName:"tr",align:null},"Menu location for the context menu position for document conversions.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"MFiles.MenuLocation.MenuLocation_ContextMenu_Bottom")),(0,o.kt)("td",{parentName:"tr",align:null},"43"),(0,o.kt)("td",{parentName:"tr",align:null},"Menu location for the bottom of the context menu.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"MFiles.MenuLocation.MenuLocation_PaneToolbar")),(0,o.kt)("td",{parentName:"tr",align:null},"45"),(0,o.kt)("td",{parentName:"tr",align:null},"Menu location for the toobar of the shellpane.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"MFiles.MenuLocation.MenuLocation_PaneToolbarDropdown")),(0,o.kt)("td",{parentName:"tr",align:null},"46"),(0,o.kt)("td",{parentName:"tr",align:null},"Menu location for the dropdown for the shellpane.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"MFiles.MenuLocation.MenuLocation_TopPaneMenu")),(0,o.kt)("td",{parentName:"tr",align:null},"47"),(0,o.kt)("td",{parentName:"tr",align:null},"TopPane Menu, typically used for the UI Extension applications.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"MFiles.MenuLocation.MenuLocation_ActivityContextMenu_1")),(0,o.kt)("td",{parentName:"tr",align:null},"48"),(0,o.kt)("td",{parentName:"tr",align:null},"Menu location for the Activity view Context menu group 1.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"MFiles.MenuLocation.MenuLocation_ActivityContextMenu_2")),(0,o.kt)("td",{parentName:"tr",align:null},"49"),(0,o.kt)("td",{parentName:"tr",align:null},"Menu location for the Activity view Context menu group 2.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"MFiles.MenuLocation.MenuLocation_ActivityContextMenu_3")),(0,o.kt)("td",{parentName:"tr",align:null},"50"),(0,o.kt)("td",{parentName:"tr",align:null},"Menu location for the Activity view Context menu group 3.")))))}i.isMDXComponent=!0},8125:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>v,contentTitle:()=>y,default:()=>F,frontMatter:()=>N,metadata:()=>g,toc:()=>b});var a=t(87462),o=(t(67294),t(3905));const m={toc:[]},r="wrapper";function i(e){let{components:n,...t}=e;return(0,o.kt)(r,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Promise < void >"),(0,o.kt)("td",{parentName:"tr",align:null},"Method does not return a value")))))}i.isMDXComponent=!0;const l={toc:[]},d="wrapper";function s(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"customCommand"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"number")),(0,o.kt)("td",{parentName:"tr",align:null},"The custom command id.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"location"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/UIExt2/Enums/MenuLocation/"},"MenuLocation")),(0,o.kt)("td",{parentName:"tr",align:null},"Menu location where the command is removed. Possible locations are enumerated.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"appGuid"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"string")),(0,o.kt)("td",{parentName:"tr",align:null},"Application guid if application specific command is added to application toolbar.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"dashboardId"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"string")),(0,o.kt)("td",{parentName:"tr",align:null},"Dashboard id if application specific command added to application toolbar.")))))}s.isMDXComponent=!0;t(34259),t(18679);const c={toc:[]},u="wrapper";function p(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Removes a custom command from the specified menu location."))}p.isMDXComponent=!0;var C=t(37415),h=t(44183);const k={toc:[]},M="wrapper";function f(e){let{components:n,...t}=e;return(0,o.kt)(M,(0,a.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"await shellFrame.Commands.RemoveCustomCommandFromMenu(\n    commandId, \n    MFiles.MenuLocation.MenuLocation_TopPaneMenu\n);\n")))}f.isMDXComponent=!0;const N={},y="RemoveCustomCommandFromMenu",g={unversionedId:"UIExt2/Interfaces/ICommands/RemoveCustomCommandFromMenu/index",id:"UIExt2/Interfaces/ICommands/RemoveCustomCommandFromMenu/index",title:"RemoveCustomCommandFromMenu",description:"Description",source:"@site/docs/UIExt2/Interfaces/ICommands/RemoveCustomCommandFromMenu/index.mdx",sourceDirName:"UIExt2/Interfaces/ICommands/RemoveCustomCommandFromMenu",slug:"/UIExt2/Interfaces/ICommands/RemoveCustomCommandFromMenu/",permalink:"/Frameworks/User-Interface-Extensibility-Framework/Reference/Version2/UIExt2/Interfaces/ICommands/RemoveCustomCommandFromMenu/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"GetCommandState",permalink:"/Frameworks/User-Interface-Extensibility-Framework/Reference/Version2/UIExt2/Interfaces/ICommands/GetCommandState/"},next:{title:"RemoveMenuItem",permalink:"/Frameworks/User-Interface-Extensibility-Framework/Reference/Version2/UIExt2/Interfaces/ICommands/RemoveMenuItem/"}},v={},b=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"MenuLocation",id:"menulocation",level:3},{value:"Return type",id:"return-type",level:2},{value:"Example",id:"example",level:2}],x={toc:b},w="wrapper";function F(e){let{components:n,...t}=e;return(0,o.kt)(w,(0,a.Z)({},x,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"removecustomcommandfrommenu"},"RemoveCustomCommandFromMenu"),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)(p,{components:t.components,mdxType:"Description"}),(0,o.kt)("h2",{id:"syntax"},"Syntax"),(0,o.kt)(f,{components:t.components,mdxType:"ExampleShort"}),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)(s,{components:t.components,mdxType:"Params"}),(0,o.kt)("h3",{id:"menulocation"},"MenuLocation"),(0,o.kt)("p",null,"Possible values for the ",(0,o.kt)("inlineCode",{parentName:"p"},"location")," parameter are"),(0,o.kt)(h.ZP,{components:t.components,mdxType:"MenuLocation"}),(0,o.kt)("h2",{id:"return-type"},"Return type"),(0,o.kt)(i,{components:t.components,mdxType:"Returns"}),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)(C.ZP,{components:t.components,mdxType:"Example"}))}F.isMDXComponent=!0},37415:(e,n,t)=>{t.d(n,{ZP:()=>i});var a=t(87462),o=(t(67294),t(3905));const m={toc:[]},r="wrapper";function i(e){let{components:n,...t}=e;return(0,o.kt)(r,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,'This JavaScript code is a UI Extension for M-Files, creating custom commands such as "Hello World" and providing functionality to dynamically show, hide, and remove these commands from the top menu based on user interactions within the M-Files shell.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'\n// Called when the UI Extension starts\nfunction OnNewShellUI(shellUI) {\n\n    // Wait for the ShellFrame to be created.\n    shellUI.Events.Register(\n        MFiles.Event.NewShellFrame,\n        async (shellFrame) => {\n\n            // Wait for the shellframe to start\n            shellFrame.Events.Register( \n                MFiles.Event.Started,\n                async () => {\n\n                    // Create a new custom command and menu item for the command\n                    const createCommand = async ( name: string ) => {\n\n                        // Create a new custom command\n                        const commandId = await shellFrame.Commands.CreateCustomCommand(name);\n\n                        // Add the command to the top menu\n                        const menuItemId = await shellFrame.Commands.AddCustomCommandToMenu(\n                            // Command ID\n                            commands.exampleCommand,\n                            // Menulocation\n                            MFiles.MenuLocation.MenuLocation_TopPaneMenu, \n                            // Priority of the command\n                            1 \n                        );\n\n                        // Return a data structure containing essential information about the commands\n                        return {\n                            id: commandId, // ID of the command\n                            menuItemId     // Menu item ID, can be used to add sub menus to this menu item.\n                        }\n                    }\n\n                    // Create an Example command and a set of sample commands to control it\'s visibility\n                    const commands = {\n                        // This is the sample command\n                        exampleCommand : await createCommand("Hello World"),\n\n                        // These commands control the state of the example command\n                        addCommand: await createCommand("Add Command To Menu"),\n                        deleteCustomCommand: await createCommand("Delete Command")\n                        hideCommand: await createCommand("Hide Command"),\n                        showCommand: await createCommand("Activate Command"),\n                        executeCommand: await createCommand("Execute Command"),\n                        getCommandName: await createCommand("Get Name"),\n                        getCommandState: await createCommand("Get Command State"),\n                        removeCommandFromMenu: await createCommand("Remove From Menu"), \n                        removeCommand: await createCommand("Remove Command")\n                    }\n\n                    // Add the command to the top menu\n                    const menuItemId = await shellFrame.Commands.AddCustomCommandToMenu(\n                        commands.exampleCommand,, \n                        MFiles.MenuLocation.MenuLocation_TopPaneMenu, \n                        1 // Priority of the command\n                    );\n\n                    // Listen for the custom commands.\n                    shellFrame.Commands.Events.Register(\n\n                        // Listen for the CustomCommand events.\n                        MFiles.Event.CustomCommand,\n\n                        // Each command has ID and optional data provided with it.\n                        ( commandId, data ) => {\n                            // Respond to the command if custom command sent by the application \n                            switch( commandId ) {\n\n                                // Run the Example command\n                                case commands.exampleCommand.id:\n                                    shellFrame.ShowMessage( "Hello World!" );\n                                    break;\n\n                                // Add the new menuitem which runs the example command\n                                case commands.addCommand.id:\n                                    await shellFrame.Commands.AddCustomCommandToMenu(\n                                        commands.exampleCommand, \n                                        MFiles.MenuLocation.MenuLocation_TopPaneMenu, \n                                        1 // Priority of the command\n                                    );\n                                    break;\n\n                                // Removes the command from particular menu\n                                case commands.removeCommandFromMenu.id:\n                                    await shellFrame.Commands.RemoveCustomCommandFromMenu(\n                                        commands.exampleCommand,, \n                                        MFiles.MenuLocation.MenuLocation_TopPaneMenu\n                                    );\n                                    break;\n\n                                // Deletes the command permanently\n                                case commands.deleteCommand.id:\n                                    shellFrame.Commands.SetCommandState( \n                                        commandId, \n                                        MFiles.CommandLocation.MainMenu,\n                                        MFiles.CommandState.CommandState_Active\n                                    );\n                                    break;\n\n                                // Hiddes all command instances for specific command ID\n                                case commands.hideCommand.id:\n                                     // Hide the command \n                                    shellFrame.Commands.SetCommandState( \n                                        commandId, \n                                        MFiles.CommandLocation.MainMenu,\n                                        MFiles.CommandState.CommandState_Hidden\n                                    );\n                                    break;\n\n                                // Activates (makes visible) all command instances for specific command ID\n                                case commands.showCommand.id:\n                                     // Show the command \n                                    shellFrame.Commands.SetCommandState( \n                                        commandId, \n                                        MFiles.MenuLocation.MenuLocation_TopPaneMenu,\n                                        MFiles.CommandState.CommandState_Active\n                                    );\n                                    break;\n\n                                // Get the command name\n                                case commands.getCommandName.id:\n                                    const name = await shellFrame.Commands.getCommandName(commands.exampleCommand.id);\n                                    shellFrame.ShowMessage( name );\n                                    break;\n\n                                // Get the Command State\n                                case commands.getCommandState.id:\n\n                                    // NOTE: the MFiles.CommandLocation.MainMenu must be used to get state of items added to the Top Menu\n                                    const commandState = await shellFrame.Commands.getCommandState(commands.exampleCommand.id, MFiles.CommandLocation.MainMenu );\n                                    shellFrame.ShowMessage( `Command state: ${commandState}` );\n                                    break;\n\n                            }\n                        }\n                    );\n                }\n            )\n        }\n    )\n}\n')),(0,o.kt)("p",null,"This code is essentially setting up a simple UI extension with custom commands that can be triggered from the top menu, and it allows dynamic control over the visibility of these commands based on user interactions."))}i.isMDXComponent=!0}}]);