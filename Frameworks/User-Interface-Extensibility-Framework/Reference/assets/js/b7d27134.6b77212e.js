"use strict";(self.webpackChunkuix_2=self.webpackChunkuix_2||[]).push([[6963],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>k});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var o=n.createContext({}),m=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},d=function(t){var e=m(t.components);return n.createElement(o.Provider,{value:e},t.children)},u="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},y=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,d=p(t,["components","mdxType","originalType","parentName"]),u=m(a),y=r,k=u["".concat(o,".").concat(y)]||u[y]||s[y]||l;return a?n.createElement(k,i(i({ref:e},d),{},{components:a})):n.createElement(k,i({ref:e},d))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=y;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p[u]="string"==typeof t?t:r,i[1]=p;for(var m=2;m<l;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}y.displayName="MDXCreateElement"},67658:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>m,default:()=>N,frontMatter:()=>o,metadata:()=>d,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const l={toc:[]},i="wrapper";function p(t){let{components:e,...a}=t;return(0,r.kt)(i,(0,n.Z)({},l,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./AccessControlSubjectType/"},"AccessControlSubjectType")),(0,r.kt)("td",{parentName:"tr",align:null},"Indirect property ID level type enumeration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ACLEnforcingMode/"},"ACLEnforcingMode")),(0,r.kt)("td",{parentName:"tr",align:null},"ACL enforcing modes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./AuthType/"},"AuthType")),(0,r.kt)("td",{parentName:"tr",align:null},"AuthType enumeration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./AutomaticValueType/"},"AutomaticValueType")),(0,r.kt)("td",{parentName:"tr",align:null},"Types of automatic values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./CallImportance/"},"CallImportance")),(0,r.kt)("td",{parentName:"tr",align:null},"Used by MFServer to distinguish between incoming calls of different importance levels. For example, less important calls may be rejected if the server is busy.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ConditionType/"},"ConditionType")),(0,r.kt)("td",{parentName:"tr",align:null},"Condition types enumeration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ContentType/"},"ContentType")),(0,r.kt)("td",{parentName:"tr",align:null},"Content types (sub-datatypes).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./DataFunction/"},"DataFunction")),(0,r.kt)("td",{parentName:"tr",align:null},"Functions that operate on a property value, for example.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./Datatype/"},"Datatype")),(0,r.kt)("td",{parentName:"tr",align:null},"Datatype enumeration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./EventType/"},"EventType")),(0,r.kt)("td",{parentName:"tr",align:null},"Event type enumeration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ExpressionType/"},"ExpressionType")),(0,r.kt)("td",{parentName:"tr",align:null},"Expression types.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ExtDBRefreshType/"},"ExtDBRefreshType")),(0,r.kt)("td",{parentName:"tr",align:null},"External database refresh type enumeration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ExtIDStatus/"},"ExtIDStatus")),(0,r.kt)("td",{parentName:"tr",align:null},"ExtID status enumeration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./FileIDType/"},"FileIDType")),(0,r.kt)("td",{parentName:"tr",align:null},"File id type.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./FileSizePrecision/"},"FileSizePrecision")),(0,r.kt)("td",{parentName:"tr",align:null},"Enumeration for specifying the file size precision settings.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./FileValueType/"},"FileValueType")),(0,r.kt)("td",{parentName:"tr",align:null},"Enumeration for different conditions regarding file information.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./FileVerType/"},"FileVerType")),(0,r.kt)("td",{parentName:"tr",align:null},"File version type.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./FolderListingAlgorithm/"},"FolderListingAlgorithm")),(0,r.kt)("td",{parentName:"tr",align:null},"Folder listing algorithm. Used to optimize property folder listings on intermediate view levels.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./FolderType/"},"FolderType")),(0,r.kt)("td",{parentName:"tr",align:null},"Folder type enumeration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./FormattingType/"},"FormattingType")),(0,r.kt)("td",{parentName:"tr",align:null},"Formatting types.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./IndirectPropertyIDLevelType/"},"IndirectPropertyIDLevelType")),(0,r.kt)("td",{parentName:"tr",align:null},"Indirect property ID level type enumeration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./MetadataStructureItem/"},"MetadataStructureItem")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./NACLType/"},"NACLType")),(0,r.kt)("td",{parentName:"tr",align:null},"Each named ACL is always of exactly one type, e.g., eNACLTypeNormal or eNACLTypeInternal. We specify these types as bitfields because multiple types are combined (bitwise ORed) for searching purposes. For example, see the MF_GetNamedACLs RPC method for more details.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./NamedValueType/"},"NamedValueType")),(0,r.kt)("td",{parentName:"tr",align:null},"Enumeration of possible named value types.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ObjectVersionDataRequestErrorTolerance/"},"ObjectVersionDataRequestErrorTolerance")),(0,r.kt)("td",{parentName:"tr",align:null},"Error tolerance enumeration for object version data request.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ObjectVersionDataRequestIdentityType/"},"ObjectVersionDataRequestIdentityType")),(0,r.kt)("td",{parentName:"tr",align:null},"Identity type enumeration for object version data request. Specifices how objects with changed identities are handled.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ObjFileSourceType/"},"ObjFileSourceType")),(0,r.kt)("td",{parentName:"tr",align:null},"Object file source type enumeration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ObjVerVersionType/"},"ObjVerVersionType")),(0,r.kt)("td",{parentName:"tr",align:null},"Indirect property ID level type enumeration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ParentChildBehavior/"},"ParentChildBehavior")),(0,r.kt)("td",{parentName:"tr",align:null},"Parent-child behavior enumeration (affects searching and view levels).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./PermissionsExpressionType/"},"PermissionsExpressionType")),(0,r.kt)("td",{parentName:"tr",align:null},"Permission expression types.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./PseudoUserResolutionMode/"},"PseudoUserResolutionMode")),(0,r.kt)("td",{parentName:"tr",align:null},"Pseudo-user resolution mode enumeration. NOTE: These values must equal those defined in ACLHelper\\ACEConstants.h")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./RelationshipDirection/"},"RelationshipDirection")),(0,r.kt)("td",{parentName:"tr",align:null},"Relationships direction enumeration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./SearchMode/"},"SearchMode")),(0,r.kt)("td",{parentName:"tr",align:null},"Search mode enumeration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./StatusType/"},"StatusType")),(0,r.kt)("td",{parentName:"tr",align:null},"Enumeration for different conditions to status information.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./UpdateType/"},"UpdateType")),(0,r.kt)("td",{parentName:"tr",align:null},"Update type enumeration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ValidationType/"},"ValidationType")),(0,r.kt)("td",{parentName:"tr",align:null},"Validation types.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ViewType/"},"ViewType")),(0,r.kt)("td",{parentName:"tr",align:null},"View type enumeration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./VLSortingType/"},"VLSortingType")),(0,r.kt)("td",{parentName:"tr",align:null},"Value list sorting types.")))))}p.isMDXComponent=!0;const o={},m="Enums",d={unversionedId:"gRPC/Enums/index",id:"gRPC/Enums/index",title:"Enums",description:"",source:"@site/docs/gRPC/Enums/index.mdx",sourceDirName:"gRPC/Enums",slug:"/gRPC/Enums/",permalink:"/Frameworks/User-Interface-Extensibility-Framework/Reference/Version2/gRPC/Enums/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Vault API Reference Guide",permalink:"/Frameworks/User-Interface-Extensibility-Framework/Reference/Version2/gRPC/"},next:{title:"ACLEnforcingMode",permalink:"/Frameworks/User-Interface-Extensibility-Framework/Reference/Version2/gRPC/Enums/ACLEnforcingMode/"}},u={},s=[],y={toc:s},k="wrapper";function N(t){let{components:e,...a}=t;return(0,r.kt)(k,(0,n.Z)({},y,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"enums"},"Enums"),(0,r.kt)(p,{components:a.components,mdxType:"Enums"}))}N.isMDXComponent=!0}}]);