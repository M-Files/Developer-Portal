"use strict";(self.webpackChunkuix_2=self.webpackChunkuix_2||[]).push([[3496],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=d(n),h=r,u=m["".concat(s,".").concat(h)]||m[h]||p[h]||l;return n?a.createElement(u,i(i({ref:t},c),{},{components:n})):a.createElement(u,i({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},58659:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>d,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={toc:[]},i="wrapper";function o(e){let{components:t,...n}=e;return(0,r.kt)(i,(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ICommands/"},"ICommands")),(0,r.kt)("td",{parentName:"tr",align:null},"ICommands interface provides methods for managing user defined (custom) commands.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ICommonFunctions/"},"ICommonFunctions")),(0,r.kt)("td",{parentName:"tr",align:null},"ICommonFunctions interface provides helper methods for M-Files API object creation, error handling and data persistency. This interface is accessible directly through the MFiles variable.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./IDashboard/"},"IDashboard")),(0,r.kt)("td",{parentName:"tr",align:null},"IDashboard interface can be used from the dashboard's implementation. It enables access to the parent object and the underlying window. Also the access to the custom data that was passed to the dashboard when it was opened is provided.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./IEvents/"},"IEvents")),(0,r.kt)("td",{parentName:"tr",align:null},"IEvents interface allows explicit event handler registrations to be made. The alternative is to use the implicit mechanism by implementing the event handlers with pre-defined names e.g. Started -",">"," OnStarted, Stop -",">"," OnStop etc.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./ISearchPane/"},"ISearchPane")),(0,r.kt)("td",{parentName:"tr",align:null},"ISearchPane interface provides means to manage search pane visibility and to query its availability.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./IShellFrame/"},"IShellFrame")),(0,r.kt)("td",{parentName:"tr",align:null},"The IShellFrame is the central interface that models the whole M-Files Shell. It provides access to all the other UI parts: listing, side panes, and search pane. It enables access to the custom commands creation interface.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./IShellItems/"},"IShellItems")),(0,r.kt)("td",{parentName:"tr",align:null},"IShellItems is an interface for accessing the content of M-Files Shell listing items. The set of all items currently visible in the listing are represented as an IShellItems as well as the set of currently selected items.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./IShellListing/"},"IShellListing")),(0,r.kt)("td",{parentName:"tr",align:null},"The IShellListing interface enables managing the listing in M-Files Shell. The items in the listing as well as the selection can be tracked and modified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./IShellPaneContainer/"},"IShellPaneContainer")),(0,r.kt)("td",{parentName:"tr",align:null},"IShellPaneContainer is a common interface for the embedded bottom pane and rightpane. The interface enables managing the pane content, size and visibility.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./IShellPaneTab/"},"IShellPaneTab")),(0,r.kt)("td",{parentName:"tr",align:null},"An interface for managing a shell pane tab.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./IShellUI/"},"IShellUI")),(0,r.kt)("td",{parentName:"tr",align:null},"The IShellUI interface corresponds to the Windows Explorer window. It outlives the IShellFrame instances that get destroyed and re-created every time the folder or view is changed. IShellUI makes it possible to control the Windows explorer window, to show message boxes and dashboards so that the dashboards' parent object is not invalidated when navigating to a different view in the M-Files.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"./IWindow/"},"IWindow")),(0,r.kt)("td",{parentName:"tr",align:null},"IWindow interface makes it possible to control dashboard's outer window objectwhen it has been opened as a popup.")))))}o.isMDXComponent=!0;const s={},d="Interfaces",c={unversionedId:"UIExt2/Interfaces/index",id:"UIExt2/Interfaces/index",title:"Interfaces",description:"",source:"@site/docs/UIExt2/Interfaces/index.mdx",sourceDirName:"UIExt2/Interfaces",slug:"/UIExt2/Interfaces/",permalink:"/UIExt2/Interfaces/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ToastType",permalink:"/UIExt2/Enums/ToastType/"},next:{title:"ICommands",permalink:"/UIExt2/Interfaces/ICommands/"}},m={},p=[],h={toc:p},u="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"interfaces"},"Interfaces"),(0,r.kt)(o,{components:n.components,mdxType:"Interfaces"}))}f.isMDXComponent=!0}}]);