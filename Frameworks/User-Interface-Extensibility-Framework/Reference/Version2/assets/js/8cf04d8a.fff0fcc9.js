"use strict";(self.webpackChunkuix_2=self.webpackChunkuix_2||[]).push([[6154],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>C});var a=n(67294);function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){m(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,m=function(e,t){if(null==e)return{};var n,a,m={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(m[n]=e[n]);return m}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(m[n]=e[n])}return m}var d=a.createContext({}),i=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=i(e.components);return a.createElement(d.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,m=e.mdxType,o=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=i(n),u=m,C=c["".concat(d,".").concat(u)]||c[u]||p[u]||o;return n?a.createElement(C,r(r({ref:t},s),{},{components:n})):a.createElement(C,r({ref:t},s))}));function C(e,t){var n=arguments,m=t&&t.mdxType;if("string"==typeof e||m){var o=n.length,r=new Array(o);r[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:m,r[1]=l;for(var i=2;i<o;i++)r[i]=n[i];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},18679:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294),m=n(86010);const o={tabItem:"tabItem_Ymn6"};function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,m.Z)(o.tabItem,r),hidden:n},t)}},34259:(e,t,n)=>{n(67294),n(51048)},93986:(e,t,n)=>{n.d(t,{ZP:()=>l});var a=n(87462),m=(n(67294),n(3905));const o={toc:[]},r="wrapper";function l(e){let{components:t,...n}=e;return(0,m.kt)(r,(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("table",null,(0,m.kt)("thead",{parentName:"table"},(0,m.kt)("tr",{parentName:"thead"},(0,m.kt)("th",{parentName:"tr",align:null},"Name"),(0,m.kt)("th",{parentName:"tr",align:null},"Value"),(0,m.kt)("th",{parentName:"tr",align:null},"Description"))),(0,m.kt)("tbody",{parentName:"table"},(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("inlineCode",{parentName:"td"},"MFiles.CommandLocation.Undefined")),(0,m.kt)("td",{parentName:"tr",align:null},"0"),(0,m.kt)("td",{parentName:"tr",align:null},"Undefined value.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("inlineCode",{parentName:"td"},"MFiles.CommandLocation.MainMenu")),(0,m.kt)("td",{parentName:"tr",align:null},"1"),(0,m.kt)("td",{parentName:"tr",align:null},"Specifies the command appearance in the main menus, such as top menu and command bars.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("inlineCode",{parentName:"td"},"MFiles.CommandLocation.ContextMenu")),(0,m.kt)("td",{parentName:"tr",align:null},"2"),(0,m.kt)("td",{parentName:"tr",align:null},"Specifies the command appearance in the context menu.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("inlineCode",{parentName:"td"},"MFiles.CommandLocation.TaskPane")),(0,m.kt)("td",{parentName:"tr",align:null},"4"),(0,m.kt)("td",{parentName:"tr",align:null},"Specifies the command appearance on task pane.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("inlineCode",{parentName:"td"},"MFiles.CommandLocation.AppToolbar")),(0,m.kt)("td",{parentName:"tr",align:null},"5"),(0,m.kt)("td",{parentName:"tr",align:null},"Specifies the command appearance on application toolbar.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("inlineCode",{parentName:"td"},"MFiles.CommandLocation.ActivityContextMenu")),(0,m.kt)("td",{parentName:"tr",align:null},"6"),(0,m.kt)("td",{parentName:"tr",align:null},"Specifies the command appearance in the activity context menu.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("inlineCode",{parentName:"td"},"MFiles.CommandLocation.All")),(0,m.kt)("td",{parentName:"tr",align:null},"268435455"),(0,m.kt)("td",{parentName:"tr",align:null},"Refers to all command locations.")))))}l.isMDXComponent=!0},47713:(e,t,n)=>{n.d(t,{ZP:()=>l});var a=n(87462),m=(n(67294),n(3905));const o={toc:[]},r="wrapper";function l(e){let{components:t,...n}=e;return(0,m.kt)(r,(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("table",null,(0,m.kt)("thead",{parentName:"table"},(0,m.kt)("tr",{parentName:"thead"},(0,m.kt)("th",{parentName:"tr",align:null},"Name"),(0,m.kt)("th",{parentName:"tr",align:null},"Value"),(0,m.kt)("th",{parentName:"tr",align:null},"Description"))),(0,m.kt)("tbody",{parentName:"table"},(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("inlineCode",{parentName:"td"},"MFiles.CommandState.CommandState_Undefined")),(0,m.kt)("td",{parentName:"tr",align:null},"0"),(0,m.kt)("td",{parentName:"tr",align:null},"Undefined value.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("inlineCode",{parentName:"td"},"MFiles.CommandState.CommandState_Active")),(0,m.kt)("td",{parentName:"tr",align:null},"1"),(0,m.kt)("td",{parentName:"tr",align:null},"The command is visible and enabled.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("inlineCode",{parentName:"td"},"MFiles.CommandState.CommandState_Inactive")),(0,m.kt)("td",{parentName:"tr",align:null},"2"),(0,m.kt)("td",{parentName:"tr",align:null},"The command is visible but not enabled (for example grayed).")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("inlineCode",{parentName:"td"},"MFiles.CommandState.CommandState_Hidden")),(0,m.kt)("td",{parentName:"tr",align:null},"3"),(0,m.kt)("td",{parentName:"tr",align:null},"The command is not visible.")))))}l.isMDXComponent=!0},9826:(e,t,n)=>{n.d(t,{ZP:()=>l});var a=n(87462),m=(n(67294),n(3905));const o={toc:[]},r="wrapper";function l(e){let{components:t,...n}=e;return(0,m.kt)(r,(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-javascript"},"shellFrame.Commands.SetCommandState( \n    commandId, // The ID of the command which state is to be changed\n    MFiles.MenuLocation.MenuLocation_TopPaneMenu, // The menu location of the change\n    MFiles.CommandState.CommandState_Hidden  // New state of the command in specific location or\n);\n")))}l.isMDXComponent=!0},24259:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>b,contentTitle:()=>y,default:()=>x,frontMatter:()=>f,metadata:()=>g,toc:()=>M});var a=n(87462),m=(n(67294),n(3905));const o={toc:[]},r="wrapper";function l(e){let{components:t,...n}=e;return(0,m.kt)(r,(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("table",null,(0,m.kt)("thead",{parentName:"table"},(0,m.kt)("tr",{parentName:"thead"},(0,m.kt)("th",{parentName:"tr",align:null},"Type"),(0,m.kt)("th",{parentName:"tr",align:null},"Description"))),(0,m.kt)("tbody",{parentName:"table"},(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},"Promise < ",(0,m.kt)("inlineCode",{parentName:"td"},"any")," >"),(0,m.kt)("td",{parentName:"tr",align:null},"It returns MFCLIENTSCRIPT~ICOMMANDS~SETCOMMANDSTATE.")))))}l.isMDXComponent=!0;const d={toc:[]},i="wrapper";function s(e){let{components:t,...n}=e;return(0,m.kt)(i,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("table",null,(0,m.kt)("thead",{parentName:"table"},(0,m.kt)("tr",{parentName:"thead"},(0,m.kt)("th",{parentName:"tr",align:null},"Name"),(0,m.kt)("th",{parentName:"tr",align:null},"Type"),(0,m.kt)("th",{parentName:"tr",align:null},"Description"))),(0,m.kt)("tbody",{parentName:"table"},(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},"commandId"),(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("inlineCode",{parentName:"td"},"number")),(0,m.kt)("td",{parentName:"tr",align:null},"The id of the target command. The id can represent either a ",(0,m.kt)("br",null),"custom or a builtincommand. The builtin commands are enumerated by BuiltinCommand.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},"location"),(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/UIExt2/Enums/CommandLocation/"},"CommandLocation")),(0,m.kt)("td",{parentName:"tr",align:null},"Menu location where the command state change takes place. ",(0,m.kt)("br",null),"Use All to affect in all locations.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},"state"),(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/UIExt2/Enums/CommandState/"},"CommandState")),(0,m.kt)("td",{parentName:"tr",align:null},"The new command state.")))))}s.isMDXComponent=!0;n(34259),n(18679);const c={toc:[]},p="wrapper";function u(e){let{components:t,...n}=e;return(0,m.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("p",null,"Sets the command's state to be hidden, visible, enabled or disabled. Calling\nthis method may affect context menu, application toolbar, menus or all of them."))}u.isMDXComponent=!0;var C=n(37415),h=n(9826),k=n(93986),N=n(47713);const f={},y="SetCommandState",g={unversionedId:"UIExt2/Interfaces/ICommands/SetCommandState/index",id:"UIExt2/Interfaces/ICommands/SetCommandState/index",title:"SetCommandState",description:"Description",source:"@site/docs/UIExt2/Interfaces/ICommands/SetCommandState/index.mdx",sourceDirName:"UIExt2/Interfaces/ICommands/SetCommandState",slug:"/UIExt2/Interfaces/ICommands/SetCommandState/",permalink:"/UIExt2/Interfaces/ICommands/SetCommandState/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"RemoveMenuItem",permalink:"/UIExt2/Interfaces/ICommands/RemoveMenuItem/"},next:{title:"SetMenuItemState",permalink:"/UIExt2/Interfaces/ICommands/SetMenuItemState/"}},b={},M=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"CommandLocation",id:"commandlocation",level:3},{value:"CommandState",id:"commandstate",level:3},{value:"Return type",id:"return-type",level:2},{value:"Example",id:"example",level:2}],v={toc:M},S="wrapper";function x(e){let{components:t,...n}=e;return(0,m.kt)(S,(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",{id:"setcommandstate"},"SetCommandState"),(0,m.kt)("h2",{id:"description"},"Description"),(0,m.kt)(u,{components:n.components,mdxType:"Description"}),(0,m.kt)("h2",{id:"syntax"},"Syntax"),(0,m.kt)(h.ZP,{components:n.components,mdxType:"ExampleShort"}),(0,m.kt)("h2",{id:"parameters"},"Parameters"),(0,m.kt)(s,{components:n.components,mdxType:"Params"}),(0,m.kt)("h3",{id:"commandlocation"},"CommandLocation"),(0,m.kt)("p",null,"Values for the ",(0,m.kt)("inlineCode",{parentName:"p"},"location")," are"),(0,m.kt)(k.ZP,{components:n.components,mdxType:"CommandLocation"}),(0,m.kt)("h3",{id:"commandstate"},"CommandState"),(0,m.kt)("p",null,"Values for the ",(0,m.kt)("inlineCode",{parentName:"p"},"state")," are"),(0,m.kt)(N.ZP,{components:n.components,mdxType:"CommandState"}),(0,m.kt)("h2",{id:"return-type"},"Return type"),(0,m.kt)(l,{components:n.components,mdxType:"Returns"}),(0,m.kt)("h2",{id:"example"},"Example"),(0,m.kt)(C.ZP,{components:n.components,mdxType:"Example"}))}x.isMDXComponent=!0},37415:(e,t,n)=>{n.d(t,{ZP:()=>l});var a=n(87462),m=(n(67294),n(3905));const o={toc:[]},r="wrapper";function l(e){let{components:t,...n}=e;return(0,m.kt)(r,(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("p",null,'This JavaScript code is a UI Extension for M-Files, creating custom commands such as "Hello World" and providing functionality to dynamically show, hide, and remove these commands from the top menu based on user interactions within the M-Files shell.'),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-javascript"},'\n// Called when the UI Extension starts\nfunction OnNewShellUI(shellUI) {\n\n    // Wait for the ShellFrame to be created.\n    shellUI.Events.Register(\n        MFiles.Event.NewShellFrame,\n        async (shellFrame) => {\n\n            // Wait for the shellframe to start\n            shellFrame.Events.Register( \n                MFiles.Event.Started,\n                async () => {\n\n                    // Create a new custom command and menu item for the command\n                    const createCommand = async ( name: string ) => {\n\n                        // Create a new custom command\n                        const commandId = await shellFrame.Commands.CreateCustomCommand(name);\n\n                        // Add the command to the top menu\n                        const menuItemId = await shellFrame.Commands.AddCustomCommandToMenu(\n                            // Command ID\n                            commands.exampleCommand,\n                            // Menulocation\n                            MFiles.MenuLocation.MenuLocation_TopPaneMenu, \n                            // Priority of the command\n                            1 \n                        );\n\n                        // Return a data structure containing essential information about the commands\n                        return {\n                            id: commandId, // ID of the command\n                            menuItemId     // Menu item ID, can be used to add sub menus to this menu item.\n                        }\n                    }\n\n                    // Create an Example command and a set of sample commands to control it\'s visibility\n                    const commands = {\n                        // This is the sample command\n                        exampleCommand : await createCommand("Hello World"),\n\n                        // These commands control the state of the example command\n                        addCommand: await createCommand("Add Command To Menu"),\n                        deleteCustomCommand: await createCommand("Delete Command")\n                        hideCommand: await createCommand("Hide Command"),\n                        showCommand: await createCommand("Activate Command"),\n                        executeCommand: await createCommand("Execute Command"),\n                        getCommandName: await createCommand("Get Name"),\n                        getCommandState: await createCommand("Get Command State"),\n                        removeCommandFromMenu: await createCommand("Remove From Menu"), \n                        removeCommand: await createCommand("Remove Command")\n                    }\n\n                    // Add the command to the top menu\n                    const menuItemId = await shellFrame.Commands.AddCustomCommandToMenu(\n                        commands.exampleCommand,, \n                        MFiles.MenuLocation.MenuLocation_TopPaneMenu, \n                        1 // Priority of the command\n                    );\n\n                    // Listen for the custom commands.\n                    shellFrame.Commands.Events.Register(\n\n                        // Listen for the CustomCommand events.\n                        MFiles.Event.CustomCommand,\n\n                        // Each command has ID and optional data provided with it.\n                        ( commandId, data ) => {\n                            // Respond to the command if custom command sent by the application \n                            switch( commandId ) {\n\n                                // Run the Example command\n                                case commands.exampleCommand.id:\n                                    shellFrame.ShowMessage( "Hello World!" );\n                                    break;\n\n                                // Add the new menuitem which runs the example command\n                                case commands.addCommand.id:\n                                    await shellFrame.Commands.AddCustomCommandToMenu(\n                                        commands.exampleCommand, \n                                        MFiles.MenuLocation.MenuLocation_TopPaneMenu, \n                                        1 // Priority of the command\n                                    );\n                                    break;\n\n                                // Removes the command from particular menu\n                                case commands.removeCommandFromMenu.id:\n                                    await shellFrame.Commands.RemoveCustomCommandFromMenu(\n                                        commands.exampleCommand,, \n                                        MFiles.MenuLocation.MenuLocation_TopPaneMenu\n                                    );\n                                    break;\n\n                                // Deletes the command permanently\n                                case commands.deleteCommand.id:\n                                    shellFrame.Commands.SetCommandState( \n                                        commandId, \n                                        MFiles.CommandLocation.MainMenu,\n                                        MFiles.CommandState.CommandState_Active\n                                    );\n                                    break;\n\n                                // Hiddes all command instances for specific command ID\n                                case commands.hideCommand.id:\n                                     // Hide the command \n                                    shellFrame.Commands.SetCommandState( \n                                        commandId, \n                                        MFiles.CommandLocation.MainMenu,\n                                        MFiles.CommandState.CommandState_Hidden\n                                    );\n                                    break;\n\n                                // Activates (makes visible) all command instances for specific command ID\n                                case commands.showCommand.id:\n                                     // Show the command \n                                    shellFrame.Commands.SetCommandState( \n                                        commandId, \n                                        MFiles.MenuLocation.MenuLocation_TopPaneMenu,\n                                        MFiles.CommandState.CommandState_Active\n                                    );\n                                    break;\n\n                                // Get the command name\n                                case commands.getCommandName.id:\n                                    const name = await shellFrame.Commands.getCommandName(commands.exampleCommand.id);\n                                    shellFrame.ShowMessage( name );\n                                    break;\n\n                                // Get the Command State\n                                case commands.getCommandState.id:\n\n                                    // NOTE: the MFiles.CommandLocation.MainMenu must be used to get state of items added to the Top Menu\n                                    const commandState = await shellFrame.Commands.getCommandState(commands.exampleCommand.id, MFiles.CommandLocation.MainMenu );\n                                    shellFrame.ShowMessage( `Command state: ${commandState}` );\n                                    break;\n\n                            }\n                        }\n                    );\n                }\n            )\n        }\n    )\n}\n')),(0,m.kt)("p",null,"This code is essentially setting up a simple UI extension with custom commands that can be triggered from the top menu, and it allows dynamic control over the visibility of these commands based on user interactions."))}l.isMDXComponent=!0}}]);